pytorch:
    adapter: "torchvision" # torchvision or timm
    task: "classification"
    # model name references:
    # https://pytorch.org/vision/stable/models.html#classification
    # https://huggingface.co/docs/timm/reference/models#timm.list_models
    model_name: "vgg16" # resnet18 efficientnet_v2_s vgg11-19 vgg16 mobilenet_v3_small
    weights: "DEFAULT" # updated since torchvision v0.13. Refer to official doc for customized values.
    pretrained: True # for timm only
    unfreeze: "partial" # all (unfreeze all backbone layers) | none (freeze all backbone layers) | partial (Last N Layers)
    unfreeze_modules: # module name followed by the number of the last layers within the module to unfreeze. Only applicable when unfreeze setting is "partial"
        # -1 (freeze all layers within the module) | int (last N layers)
        features: 3
    model_type:
        _target_: src.model.pytorch_model.PTClassificationModel
    num_classes: ${data_module.dataset.num_classes}
    device: ${device}
    # You typically want _self_ somewhere after the schema (base_config)

tensorflow:
    task: "classification"
    model_name: "VGG16" # VGG16 ResNet50 EfficientNetV2S
    model_type:
        _target_: src.model.tensorflow_model.TFClassificationModelFactory
    num_classes: ${data_module.dataset.num_classes}
    image_size: ${data_module.dataset.image_size}
    device: ${device}
    pretrained: True
    unfreeze_layers: -1 # -1 (All) | int (Last N Layers) | 0 (Freeze All)
    dropout_rate: 0.3
